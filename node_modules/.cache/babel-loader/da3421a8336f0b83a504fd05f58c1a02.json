{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { mockDataBase } from \"../../../src/database\";\n\nconst useProductTable = () => {\n  _s();\n\n  const [inputFromUser, setInputFromUser] = useState(\"\");\n  const [onlyProductInStock, setOnlyProductInStock] = useState(false);\n  const [sportingsGoodsValue, setSportingsGoodsValue] = useState(mockDataBase);\n  const [electronicsValue, setElectronicsValue] = useState(mockDataBase);\n  const IS_SPORTING_GOODS = \"Sporting Goods\";\n  const IS_ELECTRONICS = \"Electronics\";\n\n  const handleChangeInputText = value => setInputFromUser(value);\n\n  const handleChangeProductInStock = value => setOnlyProductInStock(value ? false : true);\n\n  const handleChange = useCallback(inputFromUser => {\n    const response = mockDataBase.filter(data => data.name.indexOf(inputFromUser) !== -1);\n    setSportingsGoodsValue(response.filter(data => data.category === IS_SPORTING_GOODS));\n    setElectronicsValue(response.filter(data => data.category === IS_ELECTRONICS));\n\n    if (onlyProductInStock) {\n      setSportingsGoodsValue(sportingsGoodsValue.filter(data => data.stocked === onlyProductInStock));\n      setElectronicsValue(electronicsValue.filter(data => data.stocked === onlyProductInStock));\n    }\n  }, [electronicsValue, onlyProductInStock, sportingsGoodsValue]);\n  const setIsSportingsGoods = useCallback(() => {\n    const response = mockDataBase.filter(data => data.category === IS_SPORTING_GOODS);\n\n    if (onlyProductInStock) {\n      setSportingsGoodsValue(response.filter(data => data.stocked === onlyProductInStock));\n      return;\n    }\n\n    setSportingsGoodsValue(response);\n  }, [onlyProductInStock]);\n  const setIsElectronics = useCallback(() => {\n    const response = mockDataBase.filter(data => data.category === IS_ELECTRONICS);\n\n    if (onlyProductInStock) {\n      setElectronicsValue(response.filter(data => data.stocked === onlyProductInStock));\n      return;\n    }\n\n    setElectronicsValue(response);\n  }, [onlyProductInStock]);\n  useEffect(() => {\n    if (inputFromUser) {\n      handleChange(inputFromUser);\n    }\n  }, [handleChange, inputFromUser]);\n  useEffect(() => {\n    setIsSportingsGoods();\n    setIsElectronics();\n  }, [setIsElectronics, setIsSportingsGoods]);\n  return {\n    handleChangeInputText,\n    handleChangeProductInStock,\n    electronicsValue,\n    sportingsGoodsValue\n  };\n};\n\n_s(useProductTable, \"irqv/2AbzksZbRWne0B2uJXWRBo=\");\n\nexport { useProductTable };","map":{"version":3,"names":["useState","useEffect","useCallback","mockDataBase","useProductTable","inputFromUser","setInputFromUser","onlyProductInStock","setOnlyProductInStock","sportingsGoodsValue","setSportingsGoodsValue","electronicsValue","setElectronicsValue","IS_SPORTING_GOODS","IS_ELECTRONICS","handleChangeInputText","value","handleChangeProductInStock","handleChange","response","filter","data","name","indexOf","category","stocked","setIsSportingsGoods","setIsElectronics"],"sources":["/home/joao_pedro/Documents/Projects/Thinking-In-React/src/components/hooks/useProductTable.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\nimport { mockDataBase } from \"../../../src/database\";\n\nconst useProductTable = () => {\n  const [inputFromUser, setInputFromUser] = useState(\"\");\n  const [onlyProductInStock, setOnlyProductInStock] = useState(false);\n  const [sportingsGoodsValue, setSportingsGoodsValue] = useState(mockDataBase);\n  const [electronicsValue, setElectronicsValue] = useState(mockDataBase);\n\n  const IS_SPORTING_GOODS = \"Sporting Goods\";\n  const IS_ELECTRONICS = \"Electronics\";\n\n  const handleChangeInputText = (value: string) => setInputFromUser(value);\n\n  const handleChangeProductInStock = (value: boolean) =>\n    setOnlyProductInStock(value ? false : true);\n\n  const handleChange = useCallback(\n    (inputFromUser: string) => {\n      const response = mockDataBase.filter(\n        (data) => data.name.indexOf(inputFromUser) !== -1\n      );\n      setSportingsGoodsValue(\n        response.filter((data) => data.category === IS_SPORTING_GOODS)\n      );\n      setElectronicsValue(\n        response.filter((data) => data.category === IS_ELECTRONICS)\n      );\n      if (onlyProductInStock) {\n        setSportingsGoodsValue(\n          sportingsGoodsValue.filter(\n            (data) => data.stocked === onlyProductInStock\n          )\n        );\n        setElectronicsValue(\n          electronicsValue.filter((data) => data.stocked === onlyProductInStock)\n        );\n      }\n    },\n    [electronicsValue, onlyProductInStock, sportingsGoodsValue]\n  );\n\n  const setIsSportingsGoods = useCallback(() => {\n    const response = mockDataBase.filter(\n      (data) => data.category === IS_SPORTING_GOODS\n    );\n    if (onlyProductInStock) {\n      setSportingsGoodsValue(\n        response.filter((data) => data.stocked === onlyProductInStock)\n      );\n      return;\n    }\n\n    setSportingsGoodsValue(response);\n  }, [onlyProductInStock]);\n\n  const setIsElectronics = useCallback(() => {\n    const response = mockDataBase.filter(\n      (data) => data.category === IS_ELECTRONICS\n    );\n    if (onlyProductInStock) {\n      setElectronicsValue(\n        response.filter((data) => data.stocked === onlyProductInStock)\n      );\n      return;\n    }\n    setElectronicsValue(response);\n  }, [onlyProductInStock]);\n\n  useEffect(() => {\n    if (inputFromUser) {\n      handleChange(inputFromUser);\n    }\n  }, [handleChange, inputFromUser]);\n\n  useEffect(() => {\n    setIsSportingsGoods();\n    setIsElectronics();\n  }, [setIsElectronics, setIsSportingsGoods]);\n\n  return {\n    handleChangeInputText,\n    handleChangeProductInStock,\n    electronicsValue,\n    sportingsGoodsValue,\n  };\n};\n\nexport { useProductTable };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}